{"version":3,"sources":["store/tokenReducer/tokenReducer.js","Consts.js","components/LoginPage/loginPage.js","components/DataTableContetnLoader/DataTable.js","store/usersReducer/usersReducer.js","components/PaginationBlock/paginationBlock.js","components/UserDialog/userDialog.js","components/UsersList/usersList.js","components/AppRouter/AppRouter.js","components/App/App.js","serviceWorker.js","store/index.js","index.js"],"names":["tokenSlice","createSlice","name","initialState","token","reducers","setToken","state","action","payload","actions","API_PREFIX","mapDpatchToProps","connect","props","useState","username","password","passwordEntered","usernameEntered","passwordValid","setState","history","useHistory","handleChange","ev","target","id","value","prevState","onSubmit","preventDefault","body","axios","post","then","res","data","push","catch","className","TextField","onChange","label","variant","size","error","helperText","type","Button","color","DataTable","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","description","filename","usersSlice","users","setUsers","addUser","user","updateUser","map","el","PaginationBlock","count","page","rowsPerPage","onChangePage","style","flexShrink","IconButton","onClick","event","disabled","aria-label","KeyboardArrowLeft","Math","ceil","KeyboardArrowRight","max","UserDialog","first_name","last_name","is_active","errors","userError","passError","firstError","lastError","errorTexts","userText","passText","firstText","lastText","getUser","bind","handleChecked","saveUser","this","prevProps","open","validateField","length","match","checked","url","get","headers","Authorization","response","err","console","log","onClose","method","Dialog","DialogTitle","DialogContent","required","FormControlLabel","control","Checkbox","DialogActions","React","Component","UsersTable","isDataLoading","orderDirection","searchValue","openDialog","currentId","handlePageChange","handleRowsPerPageChange","handleOrderClick","handleSearch","handleSearchChange","sortUsers","openUserDialog","closeUserDialog","getData","newPage","parseInt","newOrderDirection","filter","includes","order","array","slice","direction","sort","a","b","orderArrow","ArrowUpward","fontSize","ArrowDownward","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","key","title","last_login","formDate","ButtonGroup","Edit","HighlightOff","TableFooter","colSpan","Input","startAdornment","InputAdornment","position","Search","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","onChangeRowsPerPage","ActionsComponent","date","Date","toString","split","join","mapDispatchToProps","exact","path","LoginPage","render","to","from","App","Boolean","window","location","hostname","reducer","combineReducers","tokenReducer","usersReducer","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.909167f9.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype SetActionType = {\r\n    token: string\r\n};\r\n\r\nconst tokenSlice = createSlice({\r\n    name: 'token',\r\n    initialState: {\r\n        token: null\r\n    },\r\n    reducers: {\r\n        setToken (state, action: PayloadAction<SetActionType>) {\r\n            state.token = action.payload.token;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setToken } = tokenSlice.actions;\r\nexport default tokenSlice.reducer;","export const API_PREFIX = 'https://emphasoft-test-assignment.herokuapp.com/';","import React, { useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { setToken } from '../../store/tokenReducer/tokenReducer';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { API_PREFIX } from '../../Consts';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './loginPage.css';\r\n\r\nexport function LoginPage(props) {\r\n    const [state, setState] = useState({\r\n        username: '',\r\n        password: '',\r\n        passwordEntered: true,\r\n        usernameEntered: true,\r\n        passwordValid: true\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (ev) => {\r\n        const { id, value } = ev.target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value,\r\n            [id + 'Entered']: true\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        const url = API_PREFIX + 'api-token-auth/';\r\n        const { username, password } = state;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            passwordEntered: password !== '',\r\n            usernameEntered: username !== ''\r\n        }));\r\n        if (password === '' || username === '')\r\n            return;\r\n        const body = {\r\n            username,\r\n            password\r\n        };\r\n        axios.post(url, body).then((res) => {\r\n            props.setToken({ token: res.data.token });\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                passwordEntered: true,\r\n                usernameEntered: true,\r\n                passwordValid: true\r\n            }))\r\n        })\r\n            .then(() => history.push('/Emphasoft/users'))\r\n            .catch(() => setState(prevState => ({\r\n                ...prevState,\r\n                passwordValid: false,\r\n                password: ''\r\n            })))\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit} className='login-form'>\r\n            <TextField\r\n                onChange={handleChange}\r\n                id='username'\r\n                label='Username'\r\n                variant='outlined'\r\n                size='small'\r\n                value={state.username}\r\n                error={!state.usernameEntered}\r\n                helperText={state.usernameEntered ? '' : 'Enter username'}\r\n            />\r\n            <TextField\r\n                onChange={handleChange}\r\n                id='password'\r\n                label='Password'\r\n                variant='outlined'\r\n                size='small'\r\n                value={state.password}\r\n                error={!state.passwordValid || !state.passwordEntered}\r\n                helperText={state.passwordEntered ? (state.passwordValid ? '' : 'Wrong username of password') : 'Enter password'}\r\n                type='password'/>\r\n            <Button type='submit' variant='contained' color='primary'>Submit</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapDpatchToProps = {\r\n    setToken\r\n};\r\n\r\nexport default connect(null, mapDpatchToProps)(LoginPage);\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst DataTable = props => (\r\n    <ContentLoader\r\n        speed={0.5}\r\n        width={1500}\r\n        height={400}\r\n        viewBox='0 0 1500 400'\r\n        backgroundColor='#f3f3f3'\r\n        foregroundColor='#ecebeb'\r\n        {...props}\r\n    >\r\n        <rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n        <rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n        <rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n        <rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n        <circle cx='1456' cy='203' r='12' />\r\n        <rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n        <rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n        <circle cx='1456' cy='265' r='12' />\r\n        <rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n        <rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n        <circle cx='1456' cy='323' r='12' />\r\n        <rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n        <rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n        <circle cx='1456' cy='386' r='12' />\r\n        <rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n        <rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n        <rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n        <circle cx='37' cy='97' r='11' />\r\n        <rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n        <circle cx='1316' cy='88' r='11' />\r\n        <rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n        <circle cx='77' cy='96' r='11' />\r\n    </ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n    name: 'Mohd Arif Un',\r\n    github: 'arif-un',\r\n    description: 'Data Table skeleton',\r\n    filename: 'DataTable',\r\n};\r\n\r\nexport default DataTable","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { array, object } from 'prop-types';\r\n\r\ntype SetActionType = {\r\n    users: array\r\n};\r\n\r\ntype AddActionType = {\r\n    user: object\r\n};\r\n\r\ntype UpdateActionType = {\r\n    id: number,\r\n    user: object\r\n}\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState: {\r\n        users: null\r\n    },\r\n    reducers: {\r\n        setUsers (state, action: PayloadAction<SetActionType>) {\r\n            state.users = action.payload.users;\r\n        },\r\n        addUser (state, action: PayloadAction<AddActionType>) {\r\n            state.users.push(action.payload.user);\r\n        },\r\n        updateUser (state, action: PayloadAction<UpdateActionType>) {\r\n            state.users = state.users.map((el) => {\r\n                if (el.id === action.payload.id)\r\n                    return action.payload.user;\r\n                else return el;\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setUsers, addUser, updateUser } = usersSlice.actions;\r\nexport default usersSlice.reducer;","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons'\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport default function PaginationBlock(props) {\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n    const setFirstPage = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const decrementPageNumber = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const incrementPageNumber = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const setLastPage = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div style={{ flexShrink: 0 }}>\r\n            <IconButton onClick={setFirstPage} disabled={page === 0} aria-label='first page'>\r\n                <FirstPageIcon />\r\n            </IconButton>\r\n            <IconButton onClick={decrementPageNumber} disabled={page === 0} aria-label='previous page'>\r\n                <KeyboardArrowLeft />\r\n            </IconButton>\r\n            <IconButton onClick={incrementPageNumber} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label='next page'>\r\n                <KeyboardArrowRight />\r\n            </IconButton>\r\n            <IconButton onClick={setLastPage} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label='last page'>\r\n                <LastPageIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {API_PREFIX} from '../../Consts';\r\nimport axios from 'axios';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport './userDialog.css';\r\n\r\nexport class UserDialog extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            errors: {\r\n                userError: false,\r\n                passError: false,\r\n                firstError: false,\r\n                lastError: false\r\n            },\r\n            errorTexts: {\r\n                userText: '',\r\n                passText: '',\r\n                firstText: '',\r\n                lastText: ''\r\n            }\r\n        };\r\n        this.getUser = this.getUser.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChecked = this.handleChecked.bind(this);\r\n        this.saveUser = this.saveUser.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.id !== 'new') {\r\n            this.getUser();\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== 'new' && prevProps.id !== this.props.id) {\r\n            this.getUser();\r\n        }\r\n        else if (this.props.open !== prevProps.open) {\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                is_active: true,\r\n                errors: {\r\n                    userError: false,\r\n                    passError: false,\r\n                    firstError: false,\r\n                    lastError: false\r\n                },\r\n                errorTexts: {\r\n                    userText: '',\r\n                    passText: '',\r\n                    firstText: '',\r\n                    lastText: ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { id, value } = event.target;\r\n        this.setState({\r\n            [id]: value\r\n        }, this.validateField(id, value));\r\n    };\r\n\r\n    validateField(id, value) {\r\n        switch (id) {\r\n            case 'username':\r\n                if(!value) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            userError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            userText: 'Username is required'\r\n                        }\r\n                    })\r\n                }\r\n                else if (value.length > 150) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            userError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            userText: 'Username is too long'\r\n                        }\r\n                    })\r\n                }\r\n                else if (!value.match(/^[\\w.@+-]+$/)) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            userError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            userText: 'Username is wrong'\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            userError: false\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            userText: ''\r\n                        }\r\n                    })\r\n                }\r\n                break;\r\n            case 'password':\r\n                if(!value) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            passError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            passText: 'Password is required'\r\n                        }\r\n                    })\r\n                }\r\n                else if (value.length > 128) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            passError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            passText: 'Password is too long'\r\n                        }\r\n                    })\r\n                }\r\n                else if (!value.match(/^(?=.*[A-Z])(?=.*\\d).{8,}$/)) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            passError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            passText: 'Password is wrong'\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            passError: false\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            passText: ''\r\n                        }\r\n                    })\r\n                }\r\n                break;\r\n            case 'first_name':\r\n                if (value.length > 30) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            firstError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            firstText: 'First name is too long'\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            firstError: false\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            firstText: ''\r\n                        }\r\n                    })\r\n                }\r\n                break;\r\n            case 'last_name':\r\n                if (value.length > 150) {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            lastError: true\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            lastText: 'Last name is too long'\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        errors: {\r\n                            ...this.state.errors,\r\n                            lastError: false\r\n                        },\r\n                        errorTexts: {\r\n                            ...this.state.errorTexts,\r\n                            lastText: ''\r\n                        }\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    handleChecked(event) {\r\n        const { checked } = event.target;\r\n        this.setState({\r\n            is_active: checked\r\n        })\r\n    };\r\n\r\n    getUser() {\r\n        const url = API_PREFIX + 'api/v1/users/' + this.props.id + '/';\r\n        axios.get(url, {\r\n            headers: {\r\n                Authorization: 'Token ' + this.props.token\r\n            }\r\n        })\r\n            .then((response) => {\r\n                this.setState({\r\n                    username: response.data.username,\r\n                    first_name: response.data.first_name,\r\n                    last_name: response.data.last_name,\r\n                    is_active: response.data.is_active\r\n                });\r\n            })\r\n            .catch((err) => console.log(err) )\r\n    }\r\n\r\n    saveUser() {\r\n        const { username, password, last_name, first_name, is_active } = this.state;\r\n        if (password === '') {\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    passError: true\r\n                },\r\n                errorTexts: {\r\n                    ...this.state.errorTexts,\r\n                    passText: 'Password is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (username === '') {\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    userError: true\r\n                },\r\n                errorTexts: {\r\n                    ...this.state.errorTexts,\r\n                    userText: 'Username is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        const { addUser, updateUser, id, onClose, token } = this.props;\r\n        const method = id === 'new' ? 'post' : 'put';\r\n        const url = API_PREFIX + 'api/v1/users/' + (id === 'new' ? '' : `${id}/`);\r\n        const data = {\r\n            username,\r\n            password,\r\n            last_name,\r\n            first_name,\r\n            is_active\r\n        };\r\n        axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                Authorization: 'Token ' + token\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (method === 'post')\r\n                    addUser({ user: response.data});\r\n                else\r\n                    updateUser({ user: response.data, id});\r\n            })\r\n            .catch( (err) => console.log(err));\r\n        onClose();\r\n    }\r\n\r\n    render() {\r\n        const { username, password, last_name, first_name, is_active, errors, errorTexts } = this.state;\r\n        const { id, onClose, open } = this.props;\r\n        return (\r\n            <Dialog open={open} onClose={onClose}>\r\n                <DialogTitle>{id === 'new' ? 'Create' : 'Edit'} user</DialogTitle>\r\n                <DialogContent>\r\n                    <form className='user-form'>\r\n                        <TextField\r\n                            id='username'\r\n                            label='Username'\r\n                            required\r\n                            variant='outlined'\r\n                            size='small'\r\n                            value={username}\r\n                            onChange={this.handleChange}\r\n                            error={errors.userError}\r\n                            helperText={errorTexts.userText}\r\n                        />\r\n                        <TextField\r\n                            id='password'\r\n                            label='Password'\r\n                            required\r\n                            variant='outlined'\r\n                            type='password'\r\n                            size='small'\r\n                            value={password}\r\n                            onChange={this.handleChange}\r\n                            error={errors.passError}\r\n                            helperText={errorTexts.passText}\r\n                        />\r\n                        <TextField\r\n                            id='first_name'\r\n                            label='First name'\r\n                            variant='outlined'\r\n                            size='small'\r\n                            value={first_name}\r\n                            onChange={this.handleChange}\r\n                            error={errors.firstError}\r\n                            helperText={errorTexts.firstText}\r\n                        />\r\n                        <TextField\r\n                            id='last_name'\r\n                            label='Last name'\r\n                            variant='outlined'\r\n                            size='small'\r\n                            value={last_name}\r\n                            onChange={this.handleChange}\r\n                            error={errors.lastError}\r\n                            helperText={errorTexts.lastText}\r\n                        />\r\n                        <FormControlLabel\r\n                            label='Active'\r\n                            control={<Checkbox\r\n                                checked={is_active}\r\n                                id='is_active'\r\n                                color='primary'\r\n                                onChange={this.handleChecked}\r\n                            />}\r\n                            className='is-active-checkbox'\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant='contained' onClick={onClose}>Cancel</Button>\r\n                    <Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        disabled={errors.userError || errors.passError || errors.firstError || errors.lastError}\r\n                        onClick={this.saveUser}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Table, TableBody, TableHead, TableCell, TableRow, TableContainer, Paper, TableFooter } from '@material-ui/core';\r\nimport { API_PREFIX } from '../../Consts';\r\nimport axios from 'axios';\r\nimport DataTable from '../DataTableContetnLoader/DataTable';\r\nimport { connect } from 'react-redux';\r\nimport { addUser, setUsers, updateUser } from '../../store/usersReducer/usersReducer';\r\nimport PaginationBlock from '../PaginationBlock/paginationBlock'\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport './usersList.css'\r\nimport { ArrowDownward, ArrowUpward, Edit, HighlightOff, Search } from '@material-ui/icons'\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { UserDialog } from '../UserDialog/userDialog';\r\n\r\nexport class UsersTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDataLoading: true,\r\n            users: null,\r\n            page: 0,\r\n            rowsPerPage: 5,\r\n            orderDirection: null,\r\n            searchValue: '',\r\n            openDialog: false,\r\n            currentId: 'new'\r\n        };\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handleRowsPerPageChange = this.handleRowsPerPageChange.bind(this);\r\n        this.handleOrderClick = this.handleOrderClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.sortUsers = this.sortUsers.bind(this);\r\n        this.openUserDialog = this.openUserDialog.bind(this);\r\n        this.closeUserDialog = this.closeUserDialog.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.users !== this.props.users && prevProps.users) {\r\n            const { orderDirection } = this.state;\r\n            this.setState({\r\n                users: this.sortUsers(orderDirection, this.props.users)\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePageChange(event, newPage) {\r\n        this.setState({\r\n            page: newPage\r\n        });\r\n    }\r\n\r\n    handleRowsPerPageChange(event) {\r\n        this.setState({\r\n            rowsPerPage: parseInt(event.target.value, 10),\r\n            page: 0\r\n        })\r\n    }\r\n\r\n    handleOrderClick() {\r\n        const newOrderDirection = this.state.orderDirection === 'down' ? 'up' : 'down';\r\n        this.setState({\r\n            users: this.sortUsers(newOrderDirection),\r\n            orderDirection: newOrderDirection\r\n        })\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        this.setState({\r\n            searchValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            users: this.props.users.filter((el) => el.username.includes(this.state.searchValue)),\r\n            page: 0\r\n        });\r\n    }\r\n\r\n    openUserDialog(user = {}) {\r\n        this.setState({\r\n            currentId: user.id ? user.id : 'new',\r\n            openDialog: true\r\n        })\r\n    }\r\n\r\n    closeUserDialog() {\r\n        this.setState({\r\n            openDialog: false\r\n        })\r\n    }\r\n\r\n    sortUsers(order, users = []) {\r\n        const array = users.length > 0 ? users.slice() : this.state.users.slice();\r\n        if(order === null)\r\n            return array;\r\n        const direction = order === 'up' ? -1 : 1;\r\n        return array.sort((a, b) => {\r\n            if (a.id > b.id)\r\n                return direction;\r\n            if (a.id < b.id)\r\n                return -1 * direction;\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    getData() {\r\n        this.setState({\r\n            isDataLoading: true\r\n        });\r\n        const url = API_PREFIX + 'api/v1/users/';\r\n        axios.get(url, {\r\n            headers: {\r\n                Authorization: 'Token ' + this.props.token\r\n            }\r\n        })\r\n            .then((response) => {\r\n                this.setState({\r\n                    isDataLoading: false,\r\n                    users: response.data\r\n                });\r\n                this.props.setUsers({ users: response.data });\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    static formDate(date) {\r\n        const array = new Date(date).toString().split(' ');\r\n        return [array[2], array[1], array[3], array[4]].join(' ');\r\n    }\r\n\r\n    render() {\r\n        const { users, page, rowsPerPage, isDataLoading, orderDirection, openDialog, currentId } = this.state;\r\n        const { token, addUser, updateUser } = this.props;\r\n        const orderArrow = orderDirection === 'up' ? <ArrowUpward fontSize='small'/> : <ArrowDownward fontSize='small'/>;\r\n        return (\r\n            isDataLoading ? <DataTable /> :(\r\n                <div>\r\n                <UserDialog\r\n                    open={openDialog}\r\n                    id={currentId}\r\n                    token={token}\r\n                    onClose={this.closeUserDialog}\r\n                    addUser={addUser}\r\n                    updateUser={updateUser}\r\n                />\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className='cell' onClick={this.handleOrderClick}>\r\n                                    { orderArrow }\r\n                                    ID\r\n                                </TableCell>\r\n                                <TableCell className='cell'>username</TableCell>\r\n                                <TableCell className='cell'>First name</TableCell>\r\n                                <TableCell className='cell'>Last name</TableCell>\r\n                                <TableCell className='cell'>Last login</TableCell>\r\n                                <TableCell className='cell' />\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {(rowsPerPage > 0 ? users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : users)\r\n                                .map((user) => (\r\n                                    <TableRow key={user.id}>\r\n                                        <TableCell className='cell' title='User ID'>{user.id}</TableCell>\r\n                                        <TableCell className='cell' title={user.username}>{user.username}</TableCell>\r\n                                        <TableCell className='cell' title={user.first_name}>{user.first_name}</TableCell>\r\n                                        <TableCell className='cell' title={user.last_name}>{user.last_name}</TableCell>\r\n                                        <TableCell className='cell'>{user.last_login ? UsersTable.formDate(user.last_login) : 'Never'}</TableCell>\r\n                                        <TableCell>\r\n                                            <ButtonGroup>\r\n                                                <IconButton onClick={() => this.openUserDialog(user)} size='small' color='primary'><Edit /></IconButton>\r\n                                                <IconButton size='small' color='secondary'><HighlightOff /></IconButton>\r\n                                            </ButtonGroup>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            )}\r\n                        </TableBody>\r\n                        <TableFooter className='table_footer'>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Button\r\n                                        colSpan={1}\r\n                                        variant='contained'\r\n                                        className='addUser'\r\n                                        color='primary'\r\n                                        onClick={this.openUserDialog}\r\n                                    >\r\n                                        Add user\r\n                                    </Button>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <form onSubmit={this.handleSearch}>\r\n                                        <Input\r\n                                            type='search'\r\n                                            colSpan={3}\r\n                                            value={this.state.searchValue}\r\n                                            onChange={this.handleSearchChange}\r\n                                            startAdornment={\r\n                                                <InputAdornment position='start' onClick={this.handleSearch}>\r\n                                                    <Search/>\r\n                                                </InputAdornment>\r\n                                            }\r\n                                        />\r\n                                    </form>\r\n                                </TableCell>\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: users.length }]}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    colSpan={5}\r\n                                    count={users.length}\r\n                                    page={page}\r\n                                    SelectProps={{\r\n                                        inputProps: { 'aria-label': 'rows per page' },\r\n                                        native: true,\r\n                                    }}\r\n                                    onChangePage={this.handlePageChange}\r\n                                    onChangeRowsPerPage={this.handleRowsPerPageChange}\r\n                                    ActionsComponent={PaginationBlock}\r\n                                />\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n                </TableContainer>\r\n                </div>\r\n                ))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token.token,\r\n        users: state.users.users\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setUsers,\r\n    addUser,\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersTable);","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport LoginPage from '../LoginPage/loginPage';\r\nimport UsersTable from '../UsersList/usersList';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const AppRouter = (props) => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path='/Emphasoft/login' component={ LoginPage }/>\r\n            <Route path='/Emphasoft/users' render={() => (\r\n                props.token !== null ?  (<UsersTable token={ props.token }/>) : (<Redirect to='/Emphasoft/login'/>)\r\n            )}/>\r\n            <Redirect from='/Emphasoft' to='/Emphasoft/login' />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token.token\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppRouter);","import React from 'react';\nimport './App.css';\nimport AppRouter from '../AppRouter/AppRouter';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // 'Content is cached for offline use.' message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore } from 'redux';\r\nimport tokenReducer from './tokenReducer/tokenReducer'\r\nimport usersReducer from './usersReducer/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n    token: tokenReducer,\r\n    users: usersReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}